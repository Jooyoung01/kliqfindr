
      SUBROUTINE PLOTMAT(TINMAT,MAXG,UANCHOR,NUMDIM,
     C STARTINC,SYMMAT,COORD,MAXINC,BYINC,MEANVAL,MAXK,ANGLE,
     C RADIUS,CENTER,IANCHOR,UANCHOR2,MOVE2,MAXVAL,DRADIUS,
     C KEXP,XNORMAL,XMINVAL,TF1,BYANGLE,BYSCALE,XMINPICT,XCTCENT1,
     C XCTCENT2,WRITSMAC,WARP,RANGEEIG)
      INCLUDE 'PARAM.H'


      INTEGER MAXG,CHANGE,COMPARE,I,J,H,ORDER(MAXKLIQ),
     C INORD,MOVEG,TOG,KTOG,THISG,TOPVAL,ANCHOR,ANCHOR2,MEDIAN1,
     C NUMDIM,PLACED(MAXKLIQ),NINCREM,STARTINC,SYMMAT,MEDIAN2,
     C MAXINC,BYINC,DANCHOR,MAXK,CENTER,IANCHOR(MAXKLIQ),
     C DANCHOR2,TANCH2,MOVE2,FANCHOR(1),ONE,UANCHOR,UANCHOR2,
     C PORDER(MAXKLIQ),ORDER2(MAXKLIQ),NORMAL,TF1,SPREADEM,MUSTP,
     C BYANGLE,BYSCALE,TB1,TB2,DEGREE(MAXKLIQ),HIGHDEGR,CD,GOTANCH,
     C BYDEGREE,PLACEI,SORTFLAG,IER,IGNUIN,K,WRITSMAC,
     C MAXJ,BASEI,NOLOG,XNORMAL,GOTEM,TOTVAL,MATZ,IERR,
     C XMAXG,NORS,DIMEN,DOGAL,APMIN,TB3,IV1(MAXGR),SK,
     C WANTEIG

      REAL TINMAT(MAXGR,MAXGR),INMAT(MAXGR,MAXGR),HIVAL,SV,POSVAL,
     C NEWCONT,DENOM,IMPVAL,CURVAL,CENT(MAXKLIQ),RADIUS(MAXKLIQ),
     C ANGLE(MAXKLIQ),COORD(MAXKLIQ,2),KEXP,TANGLE,TCOORD(MAXKLIQ),
     C KANGLE,KINCREM,OMAXVAL,LMAX,MAXVAL,TDIST,LOVAL,RMAXG,
     C MEANVAL,MEANDIM,TMAXVAL,DRADIUS,CENT2(MAXKLIQ),PCENT(MAXKLIQ),
     C TI,TH,MINVAL,ZINCREM,ZANGLE,KSCALE,ACTDIST,KMAXVAL,
     C MINPICT,XMINPICT,PCTCENT1,PCTCENT2,XCTCENT1,XCTCENT2,
     C KMINVAL,LMIN,TD,ANUL,WARP,Z(MAXGR,MAXGR),FV1(MAXGR),FV2(MAXGR),
     C W(MAXGR),XINMAT(MAXGR,MAXGR),TOTPOS,TOTVAR,VAL1,TVAL1,XMAXVAL,
     C SUMK(MAXGR),SUMJ(MAXGR),SUMALL,EWEIGHT,TOTDYAD,XMINVAL,
     C RANGEEIG(2),MINDIM,MAXDIM,WR(MAXGR),WI(MAXGR),MAXEIG,MINEIG

        LOGICAL LEXIST

       DOUBLE PRECISION PDIST,SQPDIST,SCALEFAC,STRESS,SUMPDIST 


       INTEGER DOSMAC,CI,SI,SJ,SPARAM(5,10),NPAR(5)
       DATA PCENT/MAXKLIQ*0.0/

       CHARACTER*40 FORM(5)
       CHARACTER*32 NAME1/'smac.dat2'/, NAME2/'smac.data'/
       INTEGER LINK,STATUS

        APMIN=0
        IF (XMINVAL .LT. 0) THEN
        APMIN=1
        END IF
        MINVAL=ABS(XMINVAL)
        
         NOLOG=0
        IF (XNORMAL .LT. 0) THEN
        NOLOG=1
        END IF
        NORMAL=ABS(XNORMAL)


C        DOSMAC=1
       DOGAL=0
       IF (BYANGLE .EQ. 3) THEN
       DOGAL=1
       END IF
        DOSMAC=0
       IF (BYANGLE .EQ. 2) THEN
       DOSMAC=1
       END IF

       SPREADEM=0
        PCTCENT1=ABS(XCTCENT1)
        PCTCENT2=ABS(XCTCENT2)
        BYDEGREE=1   
        IF (XCTCENT1 .LT. 0)  THEN
        BYDEGREE=0
         END IF 
       IF (STARTINC .LT. 0) THEN
        SPREADEM=1
        STARTINC=-STARTINC
       END IF
 

      IF (ABS(MAXVAL) .LT. .00001) THEN
      MAXVAL=-999
      LMAX=-999
       END IF

       LMIN=9999
      DO 61 I=1,MAXG
      DO 62 J=1,MAXG
      IF ((TINMAT(I,J) .GT. MAXVAL) .AND. (J .NE. I)) THEN
      MAXVAL=TINMAT(I,J)
       END IF
      IF ((TINMAT(I,J) .LT. LMIN) .AND.
     C  (ABS(TINMAT(I,J)) .GT. .0001) .AND. (J .NE. I)) THEN
      LMIN=TINMAT(I,J)
       END IF
00062   CONTINUE
00061    CONTINUE
      IF (ABS(MAXVAL) .LT. .00001) THEN
       MAXVAL=MAXVAL+MAXVAL/MAXG
      END IF

        KMINVAL=LMIN/3.000
        IF ((MINVAL .LT. KMINVAL) .OR. (APMIN .EQ. 1)) THEN
        KMINVAL=MINVAL
        END IF

       DENOM=MAXG*(MAXG-1)
C      IF (SYMMAT .EQ. 1) THEN
C      DENOM=DENOM/2
C      END IF
      MEANVAL=0
C       MAXVAL=TMAXVAL*(2-ZSYMMAT)

        MEDIAN1=0
       IF (UANCHOR .LT. 0) THEN 
       MEDIAN1=1   
       DANCHOR=-UANCHOR
       ELSE
       MEDIAN1=0
       DANCHOR=UANCHOR
       END IF

        MEDIAN2=0
       IF (UANCHOR2 .LT. 0) THEN 
       MEDIAN2=1   
       DANCHOR2=-UANCHOR2
       ELSE
       MEDIAN2=0
       DANCHOR2=UANCHOR2
       END IF


      TH=1
      IF ((MAXVAL .GT. 0) .AND. (NORMAL .EQ. 3)) THEN
      TH=MAXVAL
      END IF
       MINPICT=XMINPICT*MAXVAL
      KMAXVAL=MAXVAL
      IF ((NORMAL .EQ. 2) .OR. (NORMAL .EQ. 3)) THEN 
      KMAXVAL=LOG(TH)-LOG(KMINVAL)
      IF (NOLOG .EQ. 1) THEN
      KMAXVAL=TH/KMINVAL
      END IF
      END IF
 
      DO 44 I=1,MAXG
      IANCHOR(I)=0
      INMAT(I,I)=0
      RADIUS(I)=0
      ANGLE(I)=0
      PLACED(I)=0
      DO 66 J=1,NUMDIM
      COORD(I,J)=0
00066  CONTINUE


        DO 55 J=1,MAXG
      IF (J .NE. I) THEN

      IF (SYMMAT .EQ. 1) THEN
      INMAT(I,J)=(TINMAT(I,J)+TINMAT(J,I))/2
      ELSE
       INMAT(I,J)=TINMAT(I,J)
      END IF

      IF ((NORMAL .GT. 3) .OR. (NORMAL .LT. 2)) THEN
      INMAT(I,J)=MAXVAL-INMAT(I,J)
      END IF
C      WRITE(33,'(A,2I10)') 'NORMAL NOLOG', NORMAL,NOLOG
      IF ((NORMAL .EQ. 2) .OR. (NORMAL .EQ. 3)) THEN

      IF (INMAT(I,J) .LT. KMINVAL) THEN 
      INMAT(I,J)=KMINVAL
      END IF
      IF (NOLOG .EQ. 0) THEN
      INMAT(I,J)=LOG(TH) - LOG(INMAT(I,J))
      ELSE
      INMAT(I,J)=TH/INMAT(I,J)
      END IF

      END IF

      END IF
       MEANVAL=MEANVAL+INMAT(I,J)/DENOM
00055  CONTINUE
00044  CONTINUE
       HIGHDEGR=0
      IF (DANCHOR .GT. MAXG) THEN
      DANCHOR=MAXG
      END IF
      IF ((DANCHOR .GT. 0) .OR. (DANCHOR2 .GT. 0)) THEN
      DO 22 I=1,MAXG
      CENT(I)=0
      ORDER(I)=I
      ORDER2(I)=I
       DEGREE(I)=0
      DO 33 J=1,MAXG
      IF (J .NE. I) THEN
      IF (INMAT(I,J) .LT. KMAXVAL) THEN
      DEGREE(I) = DEGREE(I)+1
       END IF
      CENT(I)=CENT(I)+INMAT(I,J)

      IF ((MEDIAN1 .EQ. 1) .OR. (MEDIAN2 .EQ. 1)) THEN
      PCENT(J)=INMAT(I,J)
      PORDER(J)=J
      END IF
      END IF
00033  CONTINUE
      CENT2(I)=CENT(I)
      IF ((MEDIAN2 .EQ. 1) .OR. (MEDIAN1 .EQ. 1)) THEN
      IF (DEGREE(I) .GE. HIGHDEGR) THEN
      HIGHDEGR=DEGREE(I)
        END IF
       IF (BYDEGREE .EQ. 1) THEN
       PLACEI=DEGREE(I)
        ELSE
       PLACEI=MAXG
       END IF
      IF (MAXG .GT. 1) THEN
      SORTFLAG=2
      CALL SPSORT(PCENT,MAXG,PORDER,SORTFLAG,IER)
      END IF
      IF (MEDIAN1 .EQ. 1) THEN
      TB1=INT(PCTCENT1*PLACEI)
      IF (TB1 .LT. 1) THEN
      TB1=1
      END IF
      IF (TB1 .GT. MAXG) THEN
      TB1=MAXG
      END IF
      CENT(I)=PCENT(TB1)
      END IF

      IF (MEDIAN2 .EQ. 1) THEN
       IF (BYDEGREE .EQ. 1) THEN
       PLACEI=DEGREE(I)
         ELSE
       PLACEI=MAXG
       END IF

      TB2=INT(PCTCENT2*PLACEI)
      IF (TB2 .LT. 1) THEN
      TB2=1
      END IF
      IF (TB2 .GT. MAXG) THEN
      TB2=MAXG
      END IF
      IF (TB2 .EQ. TB1) THEN
      IF (TB1 .LT. MAXG) THEN
      TB2=TB2+1
       ELSE
      TB2=1
      END IF
      END IF
      CENT(I)=PCENT(TB2)
      END IF
       END IF
00022   CONTINUE
        DO 7755 TB2=1,MAXG
        CENT(TB2)=CENT(TB2)+TB2*.0001
07755    CONTINUE
       END IF
      IF (MAXG .EQ. 2) THEN
       COORD(1,1)=-INMAT(1,2)/2
       COORD(2,1)=INMAT(1,2)/2
       COORD(1,2)=0
       COORD(2,2)=0
       RADIUS(1)=INMAT(1,2)/2
       RADIUS(2)=INMAT(1,2)/2
       ANGLE(1)=3.1415926
       ANGLE(2)=0
       WARP=1.00
      END IF
      IF (MAXG .GT. 2) THEN
       IF (WARP .GT. 0) THEN
      MATZ=1
      NORS=1
      SV=.0001
      POSVAL=0

      DO 972 SJ=1,MAXGR
      DO 973 TB2=1,MAXGR
      XINMAT(SJ,TB2)=0
00973  CONTINUE
C      XINMAT(SJ,SJ)=MAXVAL
00972   CONTINUE
      SUMALL=0
      DO 93 SJ=1,MAXG
      SUMJ(SJ)=0
      SUMK(SJ)=0
      DO 94 SK=1,MAXG
      SUMJ(SJ)=SUMJ(SJ)+INMAT(SJ,SK)**2
      SUMK(SJ)=SUMK(SJ)+INMAT(SK,SJ)**2
      SUMALL=SUMALL+INMAT(SK,SJ)**2
00094  CONTINUE
00093   CONTINUE
       RMAXG=MAXG
      
      DO 72 SJ=1,MAXG
      DO 73 TB2=1,SJ
      TVAL1=(INMAT(SJ,TB2) + INMAT(TB2,SJ))/(2.00)
      IF ((ABS(TVAL1) .GT. SV) .AND. (ABS(POSVAL) .LT. SV)) THEN
      POSVAL=TVAL1
      END IF 
      XINMAT(SJ,TB2)=SUMJ(TB2)/RMAXG + SUMK(SJ)/RMAXG-
     C                          (SUMALL/RMAXG**2)-
     C                          INMAT(SJ,TB2)**2
      XINMAT(SJ,TB2)=XINMAT(SJ,TB2)/2.000
      IF ((TVAL1 .NE. POSVAL) .AND. (ABS(POSVAL) .GT. SV) .AND.
     C    (ABS(TVAL1) .GT. SV) .AND.
     C    (NORS .EQ. 1) .AND. (SJ .NE. TB2))  THEN
      NORS=0
      END IF
00073  CONTINUE
00072  CONTINUE


      DIMEN=MAXGR
      XMAXG=MAXG
C      DO 5293 I=1,XMAXG
C      DO 52323 J=1,XMAXG
C      WRITE(33,'(A)') 'INMAT FOR EIGENS 0ST'
C      WRITE(33,'(2I10,F10.5)') I,J,INMAT(I,J)
C52323 CONTINUE
C05293 CONTINUE
C       WRITE(33,'(A,2I10)') 'NORS:0 WRITSMAC:3', NORS,WRITSMAC

      IF ((NORS .EQ. 0) .AND. (WRITSMAC .EQ. 3))  THEN
      CALL RG(DIMEN,XMAXG,INMAT,WR,WI,MATZ,Z,IV1,FV1,IERR)
C     OPEN(62,FILE='oeigen.dat')
      OPEN(64,FILE='eigvals.dat')
      CALL MOVEEND(64)
      MAXEIG=0
      MINEIG=0
      DO 523 I=1,XMAXG
C      DO 5223 J=1,XMAXG
C      WRITE(33,'(A)') 'INMAT FOR EIGENS 1ST'
C      WRITE(33,'(2I10,F10.5)') I,J,INMAT(I,J)
C05223 CONTINUE
      IF (WR(I) .GT. MAXEIG) THEN
      MAXEIG=WR(I)
      END IF
 
      IF (WR(I) .LT. MINEIG) THEN
      MINEIG=WR(I)
      END IF
      WRITE(62,6262) I,WR(I),WI(I)
      WRITE(64,6262) I,WR(I),WI(I)
C     DO 5231 J=1,XMAXG
C     WRITE(62,6362) Z(J,I),Z(J,I+1)
05231  CONTINUE
00523    CONTINUE
C     CLOSE(62)
      CLOSE(64)
      OPEN(62,file='exteig.dat')
      WRITE(62,6362) MAXEIG,MINEIG
      CLOSE(62)


*      CALL RS(DIMEN,XMAXG,TINMAT,W,MATZ,Z,FV1,FV2,IERR)
*      OPEN(62,FILE='oeigen.dat')
*      DO 7543 TB2=1,XMAXG
*      WRITE(62,6262) TB2,W(TB2)
*07543 CONTINUE
*      CLOSE(62)
       WANTEIG=1
       IF (WANTEIG .EQ. 1) THEN 
      IF ((DIMEN .GE. 0) .AND. (XMAXG .GE. 0) .AND.
     C (MATZ .GE. 0) .AND. (IERR .GE. 0)) THEN
      CALL RS(DIMEN,XMAXG,XINMAT,W,MATZ,Z,FV1,FV2,IERR)
       ELSE
       OPEN(62, FILE='callrs')
      WRITE(62,145) DIMEN,XMAXG,MATZ,IERR
      CLOSE(62)
      STOP
      END IF

      XMAXG=MAXG
      TOTVAR=0
      TOTPOS=0 
       DIMEN=0      
       RANGEEIG(1)=0
      OPEN(62,FILE='eigen.dat')
      DO 543 TB2=1,XMAXG
      WRITE(62,6262) TB2,W(TB2)
      DO 5431 TB3=1,XMAXG
      WRITE(62,6261) Z(TB2,TB3)
05431 CONTINUE
      SJ=XMAXG-TB2+1
      IF ((DIMEN .LT. NUMDIM) .AND. (ABS(W(SJ)) .GT. .0001) .AND. 
     C (DOGAL .EQ. 1)) THEN
      DIMEN=DIMEN+1
      EWEIGHT=SQRT(ABS(W(SJ)))
      DO 544 SI=1,XMAXG
      COORD(SI,DIMEN)=Z(SI,SJ)*EWEIGHT
00544  CONTINUE
      END IF
      INMAT(SJ,SJ)=0
      TOTVAR=TOTVAR + W(SJ)
      IF (W(SJ) .GT. .0000) THEN 
      TOTPOS=TOTPOS+W(SJ)
      END IF
       IF (ABS(RANGEEIG(1)) .LT. .0000010) THEN
       RANGEEIG(1)=W(SJ)
       END IF

00543  CONTINUE
      CLOSE(62)

       RANGEEIG(2)=W(SJ)
       IF (ABS(TOTVAR) .GT. .000001) THEN
       WARP=TOTPOS/TOTVAR
       END IF
       END IF
C       END ON WANTEIG
      END IF
       END IF
C      DO 5225 II=1,XMAXG
C      DO 5224 JJ=1,XMAXG
C      WRITE(33,'(A)') 'INMAT FOR EIGENS'
C      WRITE(33,'(2I10,F10.5)') II,JJ,INMAT(II,JJ)
C05224 CONTINUE
C05225 CONTINUE

      IF (DOSMAC .EQ. 1) THEN
       IF (WRITSMAC .EQ. 1) THEN
        OPEN(62,FILE='coeff.fix')
        WRITE(62,6261) DRADIUS
        CLOSE(62)
       ANUL=0
       CALL WRITPARM(MAXG,SYMMAT,NUMDIM,ANUL)
       CALL WRITDATA(INMAT,MAXG,SYMMAT)
       RETURN
      END IF
C      WRITESMAC
      IF (WRITSMAC .EQ. 2) THEN  
      CALL RUNSMAC 
      RETURN
      END IF

      IF (WRITSMAC .EQ. 3) THEN
        GOTEM=0
        INQUIRE(file='smacdist',EXIST=LEXIST)
        IF(LEXIST) THEN
        OPEN(24,file='smacdist', ERR=00849, STATUS='OLD')
        DO 841 SI=1,MAXG
          READ(24,140,END=00849) (COORD(SI,SJ) , SJ=1,NUMDIM)
00841   CONTINUE
        GOTEM=1

00849   CLOSE(24)
         END IF
         
        IF (GOTEM .EQ. 0) THEN
C          GOTEM=1
          ANUL=1
          CALL WRITPARM(MAXG,SYMMAT,NUMDIM,ANUL)
          CALL RUNSMAC 
        INQUIRE(file='smacdist',EXIST=LEXIST)
        IF(LEXIST) THEN
           GOTEM=1
          OPEN(24,FILE='smacdist')
          DO 881 SI=1,MAXG
            READ(24,140,END=2899) (COORD(SI,SJ) , SJ=1,NUMDIM)
00881     CONTINUE
02899     CLOSE(24)
         END IF
         
          IF (GOTEM .EQ. 0) THEN
            ANUL=0
            OPEN(62,FILE='coeff.fix')
            WRITE(62,6261) ANUL
            CLOSE(62)
            CALL WRITPARM(MAXG,SYMMAT,NUMDIM,ANUL)
            CALL RUNSMAC 
           INQUIRE(file='smacdist',EXIST=LEXIST)
           IF(LEXIST) THEN
           GOTEM=1
            OPEN(24,FILE='smacdist')
            DO 681 SI=1,MAXG
              READ(24,140,END=3899) (COORD(SI,SJ) , SJ=1,NUMDIM)
00681       CONTINUE
3899       CLOSE(24)
            END IF
            IF (GOTEM .EQ. 0) THEN
C03899         WRITE(6,*) 'Smacof failed to produce coordinates, will use AMDS'
       WRITE(6,*) 'Smacof failed to produce coordinates, will use AMDS'
              DOSMAC=0
            END IF
          END IF
        END IF
       
       OPEN(24,file='coeff')
       READ(24,6261,END=8888) COEFF
08888  CLOSE(24)

       DO 842 SI=1,MAXG
       DO 843 SJ=1,NUMDIM
       COORD(SI,SJ)=COORD(SI,SJ)/COEFF
00843   CONTINUE
00842   CONTINUE
        END IF
C        WRITSMAC= 3

C        ELSE

C       DO SMACOF       

       SORTFLAG=2
       CALL SPSORT(CENT,MAXG,ORDER,SORTFLAG,IER)
C       END IF
       END IF



       IF (DANCHOR .NE. 0) THEN
       GOTANCH=0
       CD=DANCHOR
       DO WHILE (GOTANCH .EQ. 0)
       ANCHOR=ORDER(CD)
       IF ((BYDEGREE .EQ. 0) .OR. 
     C (DEGREE(ANCHOR) .GE. HIGHDEGR)) THEN
        IF (DOSMAC .EQ. 0) THEN
       IANCHOR(ANCHOR)=1
         END IF
       GOTANCH=1 
       ELSE
       CD=CD+1
       END IF
        END DO

       ELSE
C       DANCHOR .NE. 0

       ONE=1
       FANCHOR(1)=IGNUIN(1,(MAXG-ONE))
C       CALL GGUD(FANCHOR,MAXG,ONE)
       ANCHOR=FANCHOR(1)
       END IF

C      DANCHOR .NE. 0 
       IF ((DOSMAC .NE. 1) .AND. (DOGAL .NE. 1)) THEN

       IF (DANCHOR2 .GT. MAXG) THEN
       DANCHOR2=MAXG
       END IF
       IF (DANCHOR2 .EQ. DANCHOR) THEN
       IF (DANCHOR .LT. MAXG) THEN
       DANCHOR2=DANCHOR2+1
       ELSE
       DANCHOR2=1
       END IF
       END IF


       IF (DANCHOR2 .NE. 0) THEN
       IF (MAXG .GT. 2) THEN
       SORTFLAG=2
       CALL SPSORT(CENT2,MAXG,ORDER2,SORTFLAG,IER)
       ANCHOR2=ORDER2(DANCHOR2)
       END IF
       ELSE
       ONE=1
       FANCHOR(1)=IGNUIN(1,(MAXG-ONE))
C       CALL GGUD(FANCHOR,(MAXG-ONE),ONE)
       IF (FANCHOR(1) .EQ. ANCHOR) THEN
        IF (ANCHOR .EQ. MAXG) THEN
        ANCHOR2=1
        ELSE
        ANCHOR2=FANCHOR(1)+1
        END IF
       ELSE
       ANCHOR2=FANCHOR(1)
       END IF
       END IF

C      DANCHOR NE 0       

       COORD(ANCHOR,1)=0
       COORD(ANCHOR,2)=0

C       MAXVAL=4
C       DRADIUS=2
       TD=1
       IF (DRADIUS .GT. 0) THEN 
       TD=DRADIUS
       ELSE
       TD=-DRADIUS
       END IF

       DO 34 I=1,MAXG
       IF (I .NE. ANCHOR) THEN
       RADIUS(I)=INMAT(I,ANCHOR)/TD
       IF (RADIUS(I) .LT. MINPICT) THEN
       RADIUS(I)=MINPICT
       END IF
       END IF
00034   CONTINUE

C       PLACED(ANCHOR)=1
       PLACED(ANCHOR2)=1
       COORD(ANCHOR2,1)=RADIUS(ANCHOR2)
       COORD(ANCHOR2,2)=0
       IF (MOVE2 .EQ. 0) THEN
       TANCH2=ANCHOR2
        ELSE
       TANCH2=0
       END IF
       ONE=1
       IF (SPREADEM .EQ. 1) THEN
        MUSTP=MAXG-ONE
       IF (DANCHOR2 .NE. 0) THEN
        MUSTP=MUSTP-ONE
       END IF

       ZINCREM=6.28318/MUSTP
       ZANGLE=0
       DO 98 I=1,MAXG
       IF ((I .NE. DANCHOR) .AND. (I .NE. DANCHOR2)) THEN
       ZANGLE=ZANGLE+ZINCREM
       ANGLE(I)=ZANGLE       
       PLACED(I)=1
      COORD(I,1)=RADIUS(I)*COS(ZANGLE)
      COORD(I,2)=RADIUS(I)*SIN(ZANGLE)
       END IF
00098  CONTINUE
       END IF

C      SPREADEM .EQ. 1

      IF (DRADIUS .LT. 0) THEN
       DO 733 I=1,MAXG
       IF (I .NE. DANCHOR) THEN
       DO 734 J=1,MAXG
       IF (J .NE. DANCHOR) THEN
       INMAT(I,J)=INMAT(I,J)*(RADIUS(I)+RADIUS(J))/2
        END IF
00734   CONTINUE
        END IF
00733    CONTINUE
        END IF

C      KEXP=0
      LOVAL=0
      CHANGE=1
      KSCALE=1
       MOVEG=0
      NINCREM=STARTINC
      DO WHILE (CHANGE .EQ. 1)
      IF (NINCREM .LE. MAXINC) THEN
      NINCREM=NINCREM+BYINC
      END IF
      KINCREM=6.28318/NINCREM
      CHANGE=0
      HIVAL=-.0001

      DO 4 I=1,MAXG
      IF ((I .NE. MOVEG) .AND. (I .NE. ANCHOR) .AND. 
     C (I .NE. TANCH2)) THEN
      CURVAL=999999
      IF (PLACED(I) .EQ. 1) THEN
      CURVAL=0
      DO 322 H=1,MAXG
      IF ((H .NE. I) .AND. (PLACED(H) .EQ. 1)) THEN
      ACTDIST=INMAT(I,H)
      IF (BYANGLE .EQ. 1) THEN
      ACTDIST=ACTDIST*3.14159/KMAXVAL
      END IF
      KSCALE=1
      IF (BYSCALE .EQ. 1) THEN 
      KSCALE=2*INMAT(I,H)/(RADIUS(I)+RADIUS(H))
      END IF
      CALL KDIST(I,H,COORD,MAXK,NUMDIM,
     C KEXP,ACTDIST,TDIST,NORMAL,MINPICT,KSCALE,ANGLE(I),ANGLE(H),
     C BYANGLE)
      CURVAL=CURVAL+TDIST
      END IF
00322  CONTINUE
      END IF
      DO 9 H=1,NUMDIM
      TCOORD(H)=COORD(I,H)
00009  CONTINUE
      DO 5 J=1,NINCREM
      TANGLE=(J-1)*KINCREM
      IF ((PLACED(I) .EQ. 0) .OR. 
     C (ABS(TANGLE-ANGLE(I)) .GT. .0001)) THEN
      COORD(I,1)=RADIUS(I)*COS(TANGLE)
      COORD(I,2)=RADIUS(I)*SIN(TANGLE)
      NEWCONT=0      
      DO 6 H=1,MAXG
      IF ((H .NE. I) .AND. (PLACED(H) .EQ. 1)) THEN 
      ACTDIST=INMAT(I,H)
      IF (BYANGLE .EQ. 1) THEN
      ACTDIST=ACTDIST*3.14159/KMAXVAL
      END IF
      IF (BYSCALE .EQ. 1) THEN 
      KSCALE=2*INMAT(I,H)/(RADIUS(I)+RADIUS(H))
      END IF
      CALL KDIST(I,H,COORD,MAXK,NUMDIM,
     C KEXP,ACTDIST,TDIST,NORMAL,MINPICT,KSCALE,TANGLE,ANGLE(H),
     C BYANGLE)
      NEWCONT=NEWCONT+TDIST
      END IF
00006 CONTINUE
      IMPVAL=NEWCONT-CURVAL
      IF (IMPVAL .LT. HIVAL) THEN
      HIVAL=IMPVAL
      MOVEG=I
      KANGLE=TANGLE
      CHANGE=1
      END IF
      END IF
00005  CONTINUE
      DO 99 H=1,NUMDIM
      COORD(I,H)=TCOORD(H)
00099  CONTINUE
      END IF
00004   CONTINUE

      IF (CHANGE .EQ. 1) THEN
      PLACED(MOVEG)=1
      ANGLE(MOVEG)=KANGLE
      COORD(MOVEG,1)=RADIUS(MOVEG)*COS(KANGLE)
      COORD(MOVEG,2)=RADIUS(MOVEG)*SIN(KANGLE)
      END IF
       END DO
      IF (CENTER .EQ. 1) THEN
      DO 627 I =1,MAXG
      RADIUS(I)=0
00627 CONTINUE

      DO 677 K=1,NUMDIM
      MINDIM=99999
      MAXDIM=-MINDIM
      MEANDIM=0
      DO 788 I=1,MAXG
      IF (COORD(I,K) .GT. MAXDIM) THEN
      MAXDIM=COORD(I,K)
      END IF
      IF (COORD(I,K) .LT. MINDIM) THEN
      MINDIM=COORD(I,K)
      END IF
C      MEANDIM=MEANDIM+COORD(I,K)/MAXG
00788  CONTINUE
       MEANDIM=(MAXDIM-MINDIM)/2.000
      DO 899 I=1,MAXG
      COORD(I,K)=COORD(I,K)-MEANDIM
      RADIUS(I)=RADIUS(I)+COORD(I,K)**2
00899  CONTINUE
00677   CONTINUE
      DO 8787 I=1,MAXG
      RADIUS(I)=RADIUS(I)**.5
      ANGLE(I)=ATAN2(COORD(I,2),COORD(I,1))
      IF (ANGLE(I) .LT. 0) THEN 
       ANGLE(I)=ANGLE(I)+6.28318
      END IF
      IF (ANGLE(I) .GT. 6.28318) THEN 
       ANGLE(I)=ANGLE(I)-6.28318
      END IF
08787  CONTINUE
       END IF
C       CENTER .EQ. 1
       END IF
C       DO SMACOF
       END IF
C       MAXG GT 1
       IF ((MAXG .GT. 1) .AND.
     C ((DOSMAC .EQ. 1) .OR. (DOGAL .EQ. 1))) THEN
       DO 8484 I=1,MAXG
       RADIUS(I)=SQRT(COORD(I,1)**2+COORD(I,2)**2)
       IF((COORD(I,2).EQ.0.0) .OR. (COORD(I,1).EQ.0)) THEN
       END IF
       ANGLE(I)=ATAN2(COORD(I,2),COORD(I,1))
C       ANGLE(I)=ACOSD(COORD(I,2)/RADIUS(I))
08484   CONTINUE
       END IF
         ADJUST=1
         IF (ADJUST .EQ. 1) THEN
         MIN1=0
         MAX1=0
         MIN2=0
         MAX2=0
        DO 7876 I=1,MAXG
        IF (COORD(I,1) .GT. MAX1) THEN
        MAX1=COORD(I,1)
        END IF
        IF (COORD(I,1) .LT. MIN1) THEN
        MIN1=COORD(I,1)
        END IF
        IF (COORD(I,2) .GT. MAX2) THEN
        MAX2=COORD(I,2)
        END IF
        IF (COORD(I,2) .LT. MIN2) THEN
        MIN2=COORD(I,2)
        END IF
07876   CONTINUE
        ADJUST1=(MAX1+MIN1)/2.0
        ADJUST2=(MAX2+MIN2)/2.0
        DO 7879 I=1,MAXG
        COORD(I,1)=COORD(I,1)-ADJUST1
        COORD(I,2)=COORD(I,2)-ADJUST2
07879   CONTINUE
        END IF
C        ADJUST
        
        SQPDIST=0
        SUMPDIST=0
        STRESS=0
        DO 8221 I=2,MAXG
        DO 8222 J=1,I
        PDIST=0
        IF (((COORD(I,1)-COORD(J,1))**2 .GE. .000001) .AND.
     C   ((COORD(I,2)-COORD(J,2))**2 .GE. .000001)) THEN
        PDIST=SQRT((COORD(I,1)-COORD(J,1))**2 + 
     C (COORD(I,2)-COORD(J,2))**2)
        END IF
        SQPDIST=SQPDIST+PDIST**2
        SUMPDIST=SUMPDIST+PDIST
        STRESS=STRESS+(PDIST-COEFF*INMAT(I,J))**2
08222    CONTINUE
08221     CONTINUE
        TOTDYAD=(MAXG*(MAXG-1))/2
        SCALEFAC=SQPDIST-SUMPDIST/TOTDYAD
        STRESS=STRESS/SCALEFAC
C      WRITE(33,7474) 'The stress associated with ',MATLEN,' is '
C     C ,STRESS
       RETURN
07474  FORMAT(A27,I5,A4,F10.5)
 145  FORMAT (20G20.10)
 140  FORMAT(8X,6F12.7)
 2469 FORMAT(F5.2$)
 2470 FORMAT(F5.2)
 6767 FORMAT(20A8)
 6768 FORMAT(20A11)
 6261  FORMAT(F10.5)
 6262  FORMAT(I10,2F10.5)
 6362      FORMAT(5F10.5)

       END
